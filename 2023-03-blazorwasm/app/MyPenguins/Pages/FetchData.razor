@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Tid</th>
                <th>Temperatur</th>
                <th>Vindstyrke</th>
                <th>Symbol</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts.properties.timeseries.Take(12))
            {
                <tr>
                    <td>@forecast.time.ToShortTimeString()</td>
                    <td>@forecast.data?.instant?.details?.air_temperature</td>
                    <td>@forecast.data?.instant?.details?.wind_speed</td>
                    <td><img src='@($"weather/{forecast.data?.next_1_hours?.summary?.symbol_code}.svg")' style="width: 24px;"></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private YrResponse? forecasts;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        forecasts = await Http.GetFromJsonAsync<YrResponse>("weather?lat=63.349&lon=10.333");
    }
}
